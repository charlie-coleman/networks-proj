{"version":3,"sources":["index.js","App.js","store/users.js","store/messages.js","store/user.js","store/receiver.js","store/socket.js","components/ChangeableContent.js","components/Login.js","components/Users.js","components/Chat.js","components/MessageList.js","components/SendMessageForm.js","components/ChangeableMenu.js","serviceWorker.js","store/index.js"],"names":["_react","_interopRequireDefault","__webpack_require__","_reactDom","_App","serviceWorker","_interopRequireWildcard","ReactDOM","render","default","createElement","document","getElementById","unregister","_reactRedux","_store","_ChangeableContent","_ChangeableMenu","App","Provider","store","className","React","Component","users","type","user","state","arguments","length","undefined","action","find","id","concat","_toConsumableArray2","messages","message","receiver","socket","connect","_Login","_Users","_Chat","ChangeableContent","Content","Login","this","props","Users","Chat","_reactNativeWeb","_this","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","name","password","handleChange","bind","_assertThisInitialized2","handleSubmit","value","setState","_defineProperty2","login","_this2","View","style","styles","container","Text","text","TextInput","onChangeText","returnKeyType","autoCorrect","onSubmitEditing","passwordInput","focus","input","secureTextEntry","autoCapitalize","ref","TouchableOpacity","onPress","button","buttonText","StyleSheet","create","alignItems","height","width","fontSize","fontWeight","borderWidth","borderColor","color","textAlign","marginTop","backgroundColor","borderRadius","justifyContent","paddingVertical","setReceiver","recv","filter","map","key","userContainer","buttonContainer","flexDirection","marginBottom","paddingTop","paddingBottom","_MessageList","_SendMessageForm","send","openChat","sendMessage","MessageList","slice","reverse","_id","SendMessageForm","e","target","preventDefault","onSubmit","onChange","placeholder","ChangeableMenu","logoutB","returnToUsers","logout","chooseChat","href","onClick","config","navigator","publicUrl","URL","process","window","location","origin","addEventListener","swUrl","isLocalhost","fetch","then","response","contentType","headers","get","status","indexOf","ready","registration","reload","registerValidSW","catch","console","log","checkValidServiceWorker","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","_redux","_users","Object","keys","forEach","prototype","hasOwnProperty","_exportNames","defineProperty","exports","enumerable","_messages","_user","_receiver","_socket","reducers","combineReducers","createStore","__REDUX_DEVTOOLS_EXTENSION__","on","dispatch","gotMessages","gotUser","gotUsers","gotNewUser","gotNewMessage","credentials","emit","clearUser","clearReceiver","clearUsers","gotReceiver","sender"],"mappings":"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","file":"static/js/main.f60f53e0.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Provider} from 'react-redux';\nimport store from './store';\nimport ChangeableContent from './components/ChangeableContent';\nimport ChangeableMenu from './components/ChangeableMenu';\n\n\nexport default class App extends React.Component {\n    render() {\n        return (\n            <Provider store={ store }>\n                    <div>\n                        <div className=\"content\">\n                            <ChangeableMenu />\n                            <ChangeableContent />\n                        </div>\n                    </div>\n            </Provider>\n        );\n    }\n}","const GOT_USERS = 'GOT_USERS';\nconst GOT_NEW_USER = 'GOT_NEW_USER';\nconst CLEAR_USERS = 'CLEAR_USERS';\n\nexport const gotUsers = users => ({ type: GOT_USERS, users });\nexport const gotNewUser = user => ({ type: GOT_NEW_USER, user });\nexport const clearUsers = () => ({ type: CLEAR_USERS });\n\nconst reducer = (state = [], action) => {\n    switch (action.type) {\n        case GOT_USERS:\n            return action.users;\n        case GOT_NEW_USER:\n            if (!state.find(user => user.id === action.user.id)) {\n                return [...state, action.user];\n            } else {\n                return state;\n            }\n        case CLEAR_USERS:\n            return [];\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","const GOT_MESSAGES = 'GOT_MESSAGES';\nconst GOT_NEW_MESSAGE = 'GOT_NEW_MESSAGE';\n\nexport const gotMessages = messages => ({ type: GOT_MESSAGES, messages });\nexport const gotNewMessage = message => ({ type: GOT_NEW_MESSAGE, message });\n\nconst reducer = (state = [], action) => {\n    switch (action.type) {\n        case GOT_MESSAGES:\n            return action.messages ? action.messages : [];\n        case GOT_NEW_MESSAGE:\n            return [action.message, ...state];\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","const GOT_USER = 'GOT_USER';\nconst CLEAR_USER = 'CLEAR_USER';\n\nexport const gotUser = user => ({ type: GOT_USER, user });\nexport const clearUser = () => ({ type: CLEAR_USER });\n\nconst reducer = (state = {}, action) => {\n    switch (action.type) {\n        case GOT_USER:\n            return action.user;\n        case CLEAR_USER:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","const GOT_RECEIVER = 'GOT_RECEIVER';\nconst CLEAR_RECEIVER = 'CLEAR_RECEIVER';\n\nexport const gotReceiver = receiver => ({ type: GOT_RECEIVER, receiver });\nexport const clearReceiver = () => ({type: CLEAR_RECEIVER });\n\nconst reducer = (state = {}, action) => {\n    switch (action.type) {\n        case GOT_RECEIVER:\n            return action.receiver;\n        case CLEAR_RECEIVER:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import io from 'socket.io-client';\nconst socket = io('http://localhost:3000');\n\nsocket.connect();\nexport default socket;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Login from './Login';\nimport Users from './Users';\nimport Chat from './Chat';\n\nclass ChangeableContent extends React.Component {\n    render() {\n        let Content = Login;\n        if (this.props.user.id && !this.props.receiver.id) {\n            Content = Users;\n        } else if (this.props.user.id && this.props.receiver.id) {\n            Content = Chat;\n        }\n        return (\n            <Content />\n        );\n    }\n}\n\nconst mapState = (state) => ({\n    user: state.user,\n    receiver: state.receiver\n});\n\nexport default connect(mapState)(ChangeableContent);","import React from 'react';\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity } from 'react-native';\nimport { login } from '../store';\n\nexport default class Login extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            password: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChange(type, value) {\n        this.setState({ [type]: value });\n    }\n\n    handleSubmit() {\n        login(this.state);\n    }\n    \n    render() {\n        return (\n            <View style={ styles.container }>\n                <Text style={ styles.text }>Enter your name and password:</Text>\n                <TextInput\n                    onChangeText={ value => this.handleChange('name', value) }\n                    returnKeyType='next'\n                    autoCorrect={false}\n                    onSubmitEditing={ () => this.passwordInput.focus() }\n                    style={ styles.input }\n                />\n                <TextInput\n                    onChangeText={ value => this.handleChange('password', value) }\n                    secureTextEntry\n                    returnKeyType='go'\n                    autoCapitalize='none'\n                    style={ styles.input }\n                    ref={ input => this.passwordInput = input}\n                />\n                <TouchableOpacity\n                    onPress={ this.handleSubmit }\n                    style={ styles.button }\n                >\n                    <Text style={ styles.buttonText }>Login</Text>\n                </TouchableOpacity>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        height: '100%',\n        width: '100%'\n    },\n    text: {\n        fontSize: 20,\n        fontWeight: 'bold'\n    },\n    input: {\n        height: 40,\n        width: '90%',\n        borderWidth: 0.5,\n        borderColor: 'black',\n        color: '#000',\n        textAlign: 'center',\n        marginTop: 10\n    },\n    button: {\n        width: '75%',\n        backgroundColor: 'blue',\n        borderRadius: 50,\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 20,\n        paddingVertical: 15\n    },\n    buttonText: {\n        color: '#FFF',\n        textAlign: 'center',\n        fontSize: 15,\n        fontWeight: 'bold'\n    }\n});","import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { connect } from 'react-redux';\nimport { setReceiver } from '../store';\n\nclass Users extends React.Component {\n    constructor() {\n        super();\n        this.setReceiver = this.setReceiver.bind(this);\n    }\n    \n    setReceiver(recv) {\n        setReceiver(recv);\n    }\n    \n    render() {\n        return (\n            <View style={ styles.container }>\n            {\n                this.props.users.filter(user => user.id !== this.props.user.id).map(user => (\n                    <View key={ user.id } style={ styles.userContainer }>\n                        <Text style={ styles.name }>{user.name}</Text>\n                        <TouchableOpacity\n                            style={ styles.buttonContainer }\n                            onPress={ () => this.setReceiver(user) }\n                        >\n                            <Text style={ styles.buttonText }>Chat</Text>\n                        </TouchableOpacity>\n                    </View>\n                ))\n            }\n            </View>\n        );\n    }\n}\n\nconst mapState = state => ({\n    user: state.user,\n    users: state.users\n});\n\nexport default connect(mapState)(Users);\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        backgroundColor: 'steelblue',\n        height: '100%',\n        width: '100%'\n    },\n    userContainer: {\n        width: '90%',\n        borderWidth: 1,\n        borderColor: '#fff',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 20,\n        paddingTop: 20,\n        paddingBottom: 20\n    },\n    name: {\n        textAlign: 'center',\n        color: '#fff',\n        fontSize: 25,\n        fontWeight: 'bold',\n        marginBottom: 20\n    },\n    buttonContainer: {\n        borderRadius: 50,\n        backgroundColor: '#fff',\n        paddingVertical: 15,\n        width: '75%'\n    },\n    buttonText: {\n        color: 'steelblue',\n        textAlign: 'center',\n    }\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport { openChat, sendMessage } from '../store';\nimport MessageList from './MessageList';\nimport SendMessageForm from './SendMessageForm';\nimport './style.css';\n\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.send = this.send.bind(this);\n    }\n    \n    componentDidMount() {\n        openChat({ user: this.props.user, receiver: this.props.receiver });\n    }\n    \n    send(message) {\n        sendMessage(message.text, this.props.user, this.props.receiver);\n    }\n    \n    render() {\n        return (\n            <div className=\"app\">\n                <MessageList />\n                <SendMessageForm />\n            </div>\n        );\n    }\n}\n\nconst mapState = (state) => ({\n    messages: state.messages,\n    user: state.user,\n    receiver: state.receiver\n});\n\nexport default connect(mapState)(Chat);","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass MessageList extends React.Component {\n    render() {\n        return (\n            <ul className=\"message-list\">\n            {\n                this.props.messages.slice(0).reverse().map(message => {\n                    var classname = \"mymessage\";\n                    return (\n                        <li key={message._id} className={ classname }>\n                            <div>\n                                {message.user.name}\n                            </div>\n                            <div>\n                                {message.text}\n                            </div>\n                        </li>\n                    )\n                })\n            }\n            </ul>\n        );\n    }\n}\n\nconst mapState = (state) => ({\n    user: state.user,\n    messages: state.messages\n});\n\nexport default connect(mapState)(MessageList);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { sendMessage } from '../store';\n\nclass SendMessageForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChange(e) {\n        this.setState({\n            message: e.target.value\n        });\n    }\n    \n    handleSubmit(e) {\n        e.preventDefault();\n        sendMessage(this.state.message, this.props.user, this.props.receiver);\n        this.setState({\n            message: ''\n        });\n    }\n    \n    render() {\n        return (\n            <form className=\"send-message-form\" onSubmit={ this.handleSubmit }>\n                <input\n                    onChange={ this.handleChange }\n                    value={ this.state.message }\n                    placeholder=\"Type your message and hit ENTER.\"\n                    type=\"text\"\n                />\n            </form>\n        )\n    }\n}\n\nconst mapState = (state) => ({\n    user: state.user,\n    receiver: state.receiver\n});\n\nexport default connect(mapState)(SendMessageForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { logout, chooseChat } from '../store';\n\nclass ChangeableMenu extends React.Component {\n    constructor() {\n        super();\n        this.logoutB = this.logoutB.bind(this);\n        this.returnToUsers = this.returnToUsers.bind(this);\n    }\n    \n    logoutB() {\n        if (this.props.user.id) {\n            logout()\n        }\n    }\n    \n    returnToUsers() {\n        if (this.props.user.id && this.props.receiver.id) {\n            chooseChat();\n        }\n    }\n    \n    render() {\n        return (\n            <div className='title-cont'>\n                <div className=\"title\">Networks Chat App</div>\n                <a href=\"/\" onClick={ (e) => { e.preventDefault(); this.returnToUsers();} }>\n                    <div className=\"menu-link\" >\n                        User list\n                    </div>\n                </a>\n                <a href=\"/\" onClick={ (e) => { e.preventDefault(); this.logoutB() } }>\n                    <div className=\"menu-link\">\n                        Logout\n                    </div>\n                </a>\n            </div> \n        );\n    }\n}\n\nconst mapState = (state) => ({\n    user: state.user,\n    receiver: state.receiver\n});\n\nexport default connect(mapState)(ChangeableMenu);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers } from 'redux';\nimport users, { gotUsers, gotNewUser, clearUsers } from './users';\nimport messages, { gotMessages, gotNewMessage } from './messages';\nimport user, { gotUser, clearUser } from './user';\nimport receiver, { gotReceiver, clearReceiver } from './receiver';\nimport socket from './socket';\n\nconst reducers = combineReducers({ users, messages, user, receiver });\n\nconst store = createStore(\n    reducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nsocket.on('priorMessages', messages => {\n    store.dispatch(gotMessages(messages));\n});\n\nsocket.on('userCreated', response => {\n    const { user, users } = response;\n    store.dispatch(gotUser(user));\n    store.dispatch(gotUsers(users));\n});\n\nsocket.on('newUser', user => {\n    store.dispatch(gotNewUser(user));\n});\n\nsocket.on('incomingMessage', message => {\n    store.dispatch(gotNewMessage(message));\n});\n\nexport const login = (credentials) => {\n    socket.emit('newUser', credentials);\n};\n\nexport const logout = () => {\n    store.dispatch(clearUser());\n    store.dispatch(clearReceiver());\n    store.dispatch(clearUsers());\n}\n\nexport const chooseChat = () => {\n    store.dispatch(clearReceiver());\n}\n\nexport const openChat = users => {\n    socket.emit('chat', users);\n};\n\nexport const setReceiver = receiver => {\n    store.dispatch(gotReceiver(receiver));\n}\n\nexport const sendMessage = (text, sender, receiver) => {\n    socket.emit('message', { text, sender, receiver });\n};\n\nexport default store;\nexport * from './receiver';\nexport * from './users';\nexport * from './user';\nexport * from './receiver';\nexport * from './messages';"],"sourceRoot":""}