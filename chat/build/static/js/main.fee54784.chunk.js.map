{"version":3,"sources":["index.js","App.js","store/messages.js","store/user.js","store/conversations.js","store/users.js","store/conversation.js","store/autherror.js","store/socket.js","components/ChangeableContent.js","components/Login.js","components/Conversations.js","components/ConversationList.js","components/NewConversation.js","components/Chat.js","components/MessageList.js","components/SendMessageForm.js","components/ChangeableMenu.js","serviceWorker.js","store/index.js"],"names":["_react","_interopRequireDefault","__webpack_require__","_reactDom","_App","serviceWorker","_interopRequireWildcard","ReactDOM","render","default","createElement","document","getElementById","unregister","_reactRedux","_store","_ChangeableContent","_ChangeableMenu","App","Provider","store","className","React","Component","messages","type","message","state","arguments","length","undefined","action","concat","_toConsumableArray2","user","conversations","conversation","users","socket","secure","connect","_Login","_Conversations","_Chat","ChangeableContent","Content","Login","this","props","id","Conversations","Chat","_reactNativeWeb","_this","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","name","password","handleChange","bind","_assertThisInitialized2","handleLogin","handleRegister","value","setState","_defineProperty2","login","register","ErrorMsg","_this2","autherror","Text","style","styles","error","View","container","text","TextInput","onChangeText","returnKeyType","autoCorrect","onKeyPress","e","key","passwordInput","focus","input","secureTextEntry","autoCapitalize","ref","buttonHolder","TouchableWithoutFeedback","onPress","buttonStyle","buttonText","StyleSheet","create","alignItems","height","width","fontSize","fontWeight","color","borderWidth","borderColor","textAlign","marginTop","button","backgroundColor","borderRadius","justifyContent","paddingVertical","display","flexDirection","padding","margin","minWidth","_ConversationList","_NewConversation","isCreating","openNewConvo","closeNewConvo","getConvos","getUsers","ConversationList","NewConversation","close","open","openConversation","openConvo","convoList","map","c","conversationInfo","conversationTitle","conversationMembers","u","join","overflowX","flexGrow","flexWrap","errorText","createConversation","onNameChange","addUser","removeUser","createConvo","filter","newChatHolder","inputDiv","inputLabel","nameInput","closeButton","closeText","userListHolder","userList","listTitle","userName","indexOf","submission","doneButton","doneText","marginBottom","paddingBottom","lineHeight","_MessageList","_SendMessageForm","send","sendMessage","MessageList","messageList","scrollTop","scrollHeight","slice","reverse","classname","_id","SendMessageForm","handleSubmit","target","preventDefault","onSubmit","onChange","placeholder","inp","ChangeableMenu","logoutB","returnToUsers","logout","chooseConversation","href","onClick","config","navigator","publicUrl","URL","process","window","location","origin","addEventListener","swUrl","isLocalhost","fetch","then","response","contentType","headers","get","status","ready","registration","reload","registerValidSW","catch","console","log","checkValidServiceWorker","Boolean","hostname","match","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","_redux","_messages","Object","keys","forEach","prototype","hasOwnProperty","_exportNames","defineProperty","exports","enumerable","_user","_conversations","_users","_conversation","_autherror","_socket","reducers","combineReducers","createStore","__REDUX_DEVTOOLS_EXTENSION__","on","dispatch","gotMessages","gotUser","clearAuthError","gotNewMessage","gotAuthError","gotConversation","gotConversations","addConversation","gotUsers","credentials","emit","userId","userIds","clearUser","clearUsers","clearConversation","clearConversations","clearMessages","sender","convoId"],"mappings":"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","file":"static/js/main.fee54784.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport ChangeableContent from './components/ChangeableContent';\nimport ChangeableMenu from './components/ChangeableMenu';\nimport './components/style.css';\n\nexport default class App extends React.Component {\n    render() {\n        return (\n            <Provider store={ store }>\n              <div className=\"content\">\n                  <ChangeableMenu />\n                  <ChangeableContent />\n              </div>\n            </Provider>\n        );\n    }\n}\n","const GOT_MESSAGES = 'GOT_MESSAGES';\nconst GOT_NEW_MESSAGE = 'GOT_NEW_MESSAGE';\nconst CLEAR_MESSAGES = 'CLEAR_MESSAGES';\n\nexport const gotMessages = messages => ({ type: GOT_MESSAGES, messages });\nexport const gotNewMessage = message => ({ type: GOT_NEW_MESSAGE, message });\nexport const clearMessages = () => ({ type: CLEAR_MESSAGES });\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n      case GOT_MESSAGES:\n        return action.messages ? action.messages : [];\n      case GOT_NEW_MESSAGE:\n        return [action.message, ...state];\n      case CLEAR_MESSAGES:\n        return [];\n      default:\n        return state;\n  }\n};\n\nexport default reducer;\n","const GOT_USER = 'GOT_USER';\nconst CLEAR_USER = 'CLEAR_USER';\n\nexport const gotUser = user => ({ type: GOT_USER, user });\nexport const clearUser = () => ({ type: CLEAR_USER });\n\nconst reducer = (state = {}, action) => {\n    switch (action.type) {\n        case GOT_USER:\n            return action.user;\n        case CLEAR_USER:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","const GOT_CONVERSATIONS = 'GOT_CONVERSATIONS';\nconst ADD_CONVERSATION = 'ADD_CONVERSATION';\nconst CLEAR_CONVERSATIONS = 'CLEAR_CONVERSATIONS';\n\nexport const gotConversations = (conversations) => ({ type: GOT_CONVERSATIONS, conversations });\nexport const addConversation = (conversation) => ({ type: ADD_CONVERSATION, conversation });\nexport const clearConversations = () => ({ type: CLEAR_CONVERSATIONS });\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case GOT_CONVERSATIONS:\n      return action.conversations;\n    case ADD_CONVERSATION:\n      return [...state, action.conversation];\n    case CLEAR_CONVERSATIONS:\n      return [];\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","const GOT_USERS = 'GOT_USERS';\nconst ADD_USER = 'ADD_USER';\nconst CLEAR_USERS = 'CLEAR_USERS';\n\nexport const gotUsers = (users) => ({ type: GOT_USERS, users });\nexport const addUser = (user) => ({ type: ADD_USER, user });\nexport const clearUsers = () => ({ type: CLEAR_USERS });\n\nconst reducer = (state = [], action) => {\n  switch(action.type) {\n    case GOT_USERS:\n      return action.users;\n    case ADD_USER:\n      return [...state, action.user];\n    case CLEAR_USERS:\n      return [];\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","const GOT_CONVERSATION = 'GOT_CONVERSATION';\nconst CLEAR_CONVERSATION = 'CLEAR_CONVERSATION';\n\nexport const gotConversation = (conversation) => ({ type: GOT_CONVERSATION, conversation });\nexport const clearConversation = () => ({ type: CLEAR_CONVERSATION });\n\nconst reducer = (state = {}, action) => {\n  switch (action.type) {\n    case GOT_CONVERSATION:\n      return action.conversation;\n    case CLEAR_CONVERSATION:\n      return {};\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","const GOT_AUTH_ERROR = 'GOT_AUTH_ERROR';\nconst CLEAR_AUTH_ERROR = 'CLEAR_AUTH_ERROR';\n\nexport const gotAuthError = (message) => ({ type: GOT_AUTH_ERROR, message });\nexport const clearAuthError = () => ({ type: CLEAR_AUTH_ERROR });\n\nconst store = (state = \"\", action) => {\n  switch (action.type) {\n    case GOT_AUTH_ERROR:\n      return action.message;\n    case CLEAR_AUTH_ERROR:\n      return \"\";\n    default:\n      return state;\n  }\n}\n\nexport default store;\n","import io from 'socket.io-client';\nconst socket = io('https://charlie-coleman.com:3000', { secure: true });\n\nsocket.connect();\nexport default socket;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Login from './Login';\nimport Conversations from './Conversations';\nimport Chat from './Chat';\n\nclass ChangeableContent extends React.Component {\n    render() {\n        let Content = Login;\n        if (this.props.user.id && !this.props.conversation.id) {\n            Content = Conversations;\n        } else if (this.props.user.id && this.props.conversation.id) {\n            Content = Chat;\n        }\n        return (\n            <Content />\n        );\n    }\n}\n\nconst mapState = (state) => ({\n    user: state.user,\n    conversation: state.conversation\n});\n\nexport default connect(mapState)(ChangeableContent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { View, Text, TextInput, TouchableWithoutFeedback, StyleSheet } from 'react-native';\nimport { login, register } from '../store';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            password: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n    }\n\n    handleChange(type, value) {\n        this.setState({ [type]: value });\n    }\n\n    handleLogin() {\n      login(this.state);\n    }\n\n    handleRegister() {\n      register(this.state);\n    }\n\n    render() {\n      var ErrorMsg;\n      if (this.props.autherror !== \"\") {\n        ErrorMsg = () => (\n          <Text style={ styles.error }>{ this.props.autherror }</Text>\n        );\n      }\n      else {\n        ErrorMsg = () => (<Text style={ styles.error }>&nbsp;</Text>);\n      }\n      return (\n          <View style={ styles.container }>\n              <Text style={ styles.text }>Enter your name and password:</Text>\n              <TextInput\n                  onChangeText={ value => this.handleChange('name', value) }\n                  returnKeyType='next'\n                  autoCorrect={false}\n                  onKeyPress={ (e) => {\n                    if (e.key === 'Enter') this.passwordInput.focus();\n                  } }\n                  style={ styles.input }\n              />\n              <TextInput\n                  onChangeText={ value => this.handleChange('password', value) }\n                  secureTextEntry\n                  returnKeyType='go'\n                  autoCapitalize='none'\n                  style={ styles.input }\n                  onKeyPress={ (e) => {\n                    if (e.key === 'Enter') this.handleLogin();\n                  } }\n                  ref={ input => this.passwordInput = input}\n              />\n              <ErrorMsg />\n              <View style={ styles.buttonHolder }>\n                <TouchableWithoutFeedback\n                  onPress={ this.handleLogin }\n                >\n                  <View style={ styles.buttonStyle }>\n                    <Text style={ styles.buttonText }>Login</Text>\n                  </View>\n                </TouchableWithoutFeedback>\n                <TouchableWithoutFeedback\n                  onPress={ this.handleRegister }\n                >\n                  <View style={ styles.buttonStyle }>\n                    <Text style={ styles.buttonText }>Create Account</Text>\n                  </View>\n                </TouchableWithoutFeedback>\n              </View>\n          </View>\n      );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        height: '100%',\n        width: '100%'\n    },\n    text: {\n        fontSize: 20,\n        fontWeight: 'bold'\n    },\n    error: {\n        fontSize: 20,\n        color: 'red',\n        fontWeight: 'bold'\n    },\n    input: {\n        height: 40,\n        width: '90%',\n        borderWidth: 0.5,\n        borderColor: 'black',\n        color: '#000',\n        textAlign: 'center',\n        marginTop: 10\n    },\n    button: {\n        width: '75%',\n        backgroundColor: 'blue',\n        borderRadius: 50,\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 20,\n        paddingVertical: 15\n    },\n    buttonHolder: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    buttonStyle: {\n      backgroundColor: 'powderblue',\n      padding: 10,\n      borderRadius: 10,\n      margin: 5,\n      minWidth: '20%'\n    },\n    buttonText: {\n        textAlign: 'center',\n        fontSize: 15,\n        fontWeight: 'bold'\n    }\n});\n\n\nconst mapState = (state) => ({\n  autherror: state.autherror\n});\n\nexport default connect(mapState)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getConvos, getUsers } from '../store';\nimport ConversationList from './ConversationList';\nimport NewConversation from './NewConversation';\n\nclass Conversations extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isCreating: false\n    }\n\n    this.openNewConvo = this.openNewConvo.bind(this);\n    this.closeNewConvo = this.closeNewConvo.bind(this);\n  }\n\n  componentDidMount() {\n    getConvos(this.props.user.id);\n    getUsers();\n  }\n\n  openNewConvo() {\n    this.setState({ isCreating: true });\n  }\n\n  closeNewConvo() {\n    this.setState({ isCreating: false });\n  }\n\n  render() {\n    var Content = ConversationList;\n    if (this.state.isCreating) {\n      Content = NewConversation;\n    }\n    return (\n      <Content close={ this.closeNewConvo } open={ this.openNewConvo }/>\n    )\n  }\n}\n\nconst mapState = (state) => ({\n  user: state.user,\n  users: state.users,\n  conversations: state.conversations\n});\n\nexport default connect(mapState)(Conversations);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { View, Text, TouchableWithoutFeedback, StyleSheet } from 'react-native';\nimport { openConvo } from '../store';\n\nclass ConversationList extends React.Component {\n  constructor() {\n    super();\n\n    this.openConversation = this.openConversation.bind(this);\n  }\n\n  openConversation(id) {\n    openConvo(id);\n  }\n\n  render() {\n    return (\n      <View style={ styles.convoList }>\n        <View style={ styles.conversations }>\n          {\n            this.props.conversations.map(c => (\n              <View style={styles.conversation} key={c.id}>\n                <View style={ styles.conversationInfo }>\n                  <Text style={ styles.conversationTitle }>{ c.name }</Text>\n                  <Text style={ styles.conversationMembers }>{ c.users.map(u => u.name).join(', ') }</Text>\n                </View>\n                <TouchableWithoutFeedback\n                  style={ styles.buttonStyle }\n                  onPress={ () => this.openConversation(c.id) }\n                >\n                  <View style={styles.buttonStyle}>\n                    <Text style={styles.buttonText}>Open</Text>\n                  </View>\n                </TouchableWithoutFeedback>\n              </View>\n            ))\n          }\n        </View>\n        <TouchableWithoutFeedback\n          style={styles.buttonStyle}\n          onPress={ this.props.open }\n        >\n          <View style={styles.buttonStyle}>\n            <Text style={styles.buttonText}>New Conversation</Text>\n          </View>\n        </TouchableWithoutFeedback>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  convoList: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflowX: 'hidden',\n    alignItems: 'center',\n    width: '100vw',\n    flexGrow: 1\n  },\n  conversations: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    flexGrow: 1,\n  },\n  conversation: {\n    display: \"flex\",\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    width: \"80%\",\n    padding: 5\n  },\n  conversationInfo: {\n    flexGrow: 1\n  },\n  conversationTitle: {\n    fontSize: '16pt'\n  },\n  conversationMembers: {\n    fontSize: '11pt',\n    color: 'gray'\n  },\n  buttonStyle: {\n    backgroundColor: 'powderblue',\n    flexGrow: '0',\n    padding: 10,\n    borderRadius: 10,\n    margin: 15\n  },\n  buttonText: {\n    fontSize: '16pt',\n  }\n})\n\nconst mapState = (state) => ({\n  user: state.user,\n  users: state.users,\n  conversations: state.conversations\n});\n\nexport default connect(mapState)(ConversationList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { View, Text, TextInput, TouchableWithoutFeedback, StyleSheet } from 'react-native';\nimport { createConvo } from '../store';\n\nclass NewConversation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      users: [this.props.user],\n      errorText: ' '\n    }\n    this.createConversation = this.createConversation.bind(this);\n    this.onNameChange = this.onNameChange.bind(this);\n    this.addUser = this.addUser.bind(this);\n    this.removeUser = this.removeUser.bind(this);\n  }\n\n  onNameChange(name) {\n    this.setState({ name });\n  }\n\n  createConversation() {\n    if (this.state.name !== '' && this.state.users.length > 1) {\n      this.setState({\n        errorText: ' '\n      });\n      createConvo(this.state.name, this.state.users.map(u => u.id));\n      this.props.close();\n    }\n    else {\n      this.setState({\n        errorText: 'You need a name and at least one member for your groupchat!'\n      });\n    }\n  }\n\n  addUser(u) {\n    this.setState({\n      users: [...this.state.users, u]\n    });\n  }\n\n  removeUser(u) {\n    this.setState({\n      users: this.state.users.filter(user => user.id !== u.id)\n    });\n  }\n\n  render() {\n    return (\n      <View style={ styles.newChatHolder }>\n        <View style={ styles.inputDiv }>\n          <View style={ styles.name }>\n            <Text style={ styles.inputLabel }>Name of GroupChat: </Text>\n            <TextInput onChangeText={ name => this.onNameChange(name) } style={ styles.nameInput }/>\n          </View>\n          <TouchableWithoutFeedback\n            onPress={ this.props.close }\n          >\n            <View style={ styles.closeButton }>\n              <Text style={ styles.closeText }>&times;</Text>\n            </View>\n          </TouchableWithoutFeedback>\n        </View>\n        <View style={ styles.userListHolder }>\n          <View style={ styles.userList }>\n            <Text style={ styles.listTitle }>In Groupchat</Text>\n            {\n              this.state.users.filter(u => u.id !== this.props.user.id).map(u => (\n                <View key={u.id} style={ styles.user }>\n                  <Text style={ styles.userName }>{u.name}</Text>\n                  <TouchableWithoutFeedback\n                    onPress={() => this.removeUser(u)}\n                  >\n                    <View style={ styles.buttonStyle }>\n                      <Text style={ styles.buttonText }> - </Text>\n                    </View>\n                  </TouchableWithoutFeedback>\n                </View>\n              ))\n            }\n          </View>\n          <View style={ styles.userList }>\n            <Text style={ styles.listTitle }>Not in Groupchat</Text>\n            {\n              this.props.users\n                .filter(u => u.id !== this.props.user.id)\n                .filter(u => this.state.users.indexOf(u) === -1)\n                .map(u => (\n                <View key={u.id} style={ styles.user }>\n                  <Text style={ styles.userName }>{u.name}</Text>\n                  <TouchableWithoutFeedback\n                    onPress={ () => this.addUser(u) }\n                  >\n                    <View style={ styles.buttonStyle }>\n                      <Text style={ styles.buttonText }> + </Text>\n                    </View>\n                  </TouchableWithoutFeedback>\n                </View>\n              ))\n            }\n          </View>\n        </View>\n        <Text style={ styles.errorText }>{ this.state.errorText }</Text>\n        <View style={ styles.submission }>\n          <TouchableWithoutFeedback\n            onPress={ this.createConversation }\n          >\n            <View style={ styles.doneButton }>\n              <Text style={ styles.doneText }>Done!</Text>\n            </View>\n          </TouchableWithoutFeedback>\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  newChatHolder: {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    flexDirection: 'column',\n    marginTop: 25\n  },\n  errorText: {\n    color: 'red',\n    fontSize: '15pt'\n  },\n  inputDiv: {\n    display: 'flex',\n    width: '50%',\n    flexDirection: 'row',\n    marginBottom: 25\n  },\n  inputLabel: {\n    fontSize: '18pt'\n  },\n  name: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n  },\n  nameInput: {\n      borderWidth: 0.5,\n      borderColor: 'black',\n      color: '#000',\n      padding: 5,\n      fontSize: '14pt'\n  },\n  userListHolder: {\n    display: 'flex',\n    width: '50%',\n    flexDirection: 'column',\n  },\n  listTitle: {\n    fontSize: '18pt'\n  },\n  userList: {\n    paddingBottom: 15\n  },\n  user: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  userName: {\n    fontSize: '14pt'\n  },\n  buttonStyle: {\n    borderRadius: 2,\n    width: 25,\n    height: 25,\n    backgroundColor: 'powderblue',\n  },\n  buttonText: {\n    fontSize: '14pt',\n    textAlign: 'center'\n  },\n  doneButton: {\n    backgroundColor: 'powderblue',\n    padding: 10,\n    borderRadius: 10\n  },\n  doneText: {\n    fontSize: '16pt'\n  },\n  closeButton: {\n    backgroundColor: 'crimson',\n    borderRadius: 2,\n    width: 25,\n    height: 25\n  },\n  closeText: {\n    fontSize: '18pt',\n    lineHeight: 25,\n    textAlign: 'center'\n  },\n  submission: {\n    display: 'flex',\n    flexDirection: 'row',\n  }\n});\n\nconst mapState = (state) => ({\n  user: state.user,\n  users: state.users\n});\n\nexport default connect(mapState)(NewConversation);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { sendMessage } from '../store';\nimport MessageList from './MessageList';\nimport SendMessageForm from './SendMessageForm';\nimport './style.css';\n\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.send = this.send.bind(this);\n    }\n\n    send(message) {\n      sendMessage(message.text, this.props.user, this.props.conversation.id);\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <MessageList />\n                <SendMessageForm />\n            </div>\n        );\n    }\n}\n\nconst mapState = (state) => ({\n    messages: state.messages,\n    user: state.user,\n    conversation: state.conversation\n});\n\nexport default connect(mapState)(Chat);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass MessageList extends React.Component {\n  componentDidMount() {\n    this.messageList.scrollTop = this.messageList.scrollHeight;\n  }\n\n  componentDidUpdate() {\n    this.messageList.scrollTop = this.messageList.scrollHeight;\n  }\n\n  render() {\n    return (\n      <ul className=\"message-list\" ref={ messageList => this.messageList = messageList}>\n      {\n        this.props.messages.slice(0).reverse().map(message => {\n          var classname = \"message\";\n          if (this.props.user.id === message.user._id)\n            classname = \"mymessage\";\n          return (\n            <li key={message._id} className={ classname }>\n              <div>\n                {message.user.name}\n              </div>\n              <div>\n                {message.text}\n              </div>\n            </li>\n          )\n        })\n      }\n      </ul>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  user: state.user,\n  messages: state.messages\n});\n\nexport default connect(mapState)(MessageList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { sendMessage } from '../store';\n\nclass SendMessageForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n      this.input.focus();\n    }\n\n    handleChange(e) {\n        this.setState({\n            message: e.target.value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        sendMessage(this.state.message, this.props.user, this.props.conversation.id);\n        this.setState({\n            message: ''\n        });\n    }\n\n    render() {\n        return (\n            <form className=\"send-message-form\" onSubmit={ this.handleSubmit }>\n                <input\n                    onChange={ this.handleChange }\n                    value={ this.state.message }\n                    placeholder=\"Type your message and hit ENTER.\"\n                    type=\"text\"\n                    ref={ inp => this.input = inp }\n                />\n            </form>\n        )\n    }\n}\n\nconst mapState = (state) => ({\n    user: state.user,\n    conversation: state.conversation\n});\n\nexport default connect(mapState)(SendMessageForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { logout, chooseConversation } from '../store';\nimport './style.css';\n\nclass ChangeableMenu extends React.Component {\n    constructor() {\n        super();\n        this.logoutB = this.logoutB.bind(this);\n        this.returnToUsers = this.returnToUsers.bind(this);\n    }\n\n    logoutB() {\n        if (this.props.user.id) {\n            logout()\n        }\n    }\n\n    returnToUsers() {\n        if (this.props.user.id && this.props.conversation.id) {\n            chooseConversation();\n        }\n    }\n\n    render() {\n      var Content;\n      if (this.props.user.id && !this.props.conversation.id) {\n        Content = () => (\n          <div className='title-cont'>\n              <div className=\"title\">Networks Chat App</div>\n              <a href=\"/\" onClick={ (e) => { e.preventDefault(); this.logoutB() } }>\n                  <div className=\"menu-link\">\n                      Logout\n                  </div>\n              </a>\n          </div>\n        )\n      }\n      else if (this.props.user.id && this.props.conversation.id) {\n        Content = () => (\n          <div className='title-cont'>\n              <div className=\"title\">\n                <div className=\"gc-name\">{ this.props.conversation.name }</div>\n                <div className=\"gc-members\">{ this.props.conversation.users.map(u => u.name).join(', ')}</div>\n              </div>\n              <a href=\"/\" onClick={ (e) => { e.preventDefault(); this.returnToUsers();} }>\n                  <div className=\"menu-link\" >\n                      Conversation list\n                  </div>\n              </a>\n              <a href=\"/\" onClick={ (e) => { e.preventDefault(); this.logoutB() } }>\n                  <div className=\"menu-link\">\n                      Logout\n                  </div>\n              </a>\n          </div>\n        )\n      }\n      else {\n        Content = () => (\n          <div className='title-cont'>\n              <div className=\"title\">Networks Chat App</div>\n          </div>\n        )\n      }\n        return (\n          <Content />\n        );\n    }\n}\n\nconst mapState = (state) => ({\n    user: state.user,\n    conversation: state.conversation\n});\n\nexport default connect(mapState)(ChangeableMenu);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers } from 'redux';\n\nimport messages, { gotMessages, gotNewMessage, clearMessages } from './messages';\nimport user, { gotUser, clearUser } from './user';\nimport conversations, { gotConversations, addConversation, clearConversations } from './conversations';\nimport users, { gotUsers, addUser, clearUsers } from './users';\nimport conversation, { gotConversation, clearConversation } from './conversation';\nimport autherror, { gotAuthError, clearAuthError } from './autherror';\n\nimport socket from './socket';\n\nconst reducers = combineReducers({ messages, user, users, conversation, conversations, autherror });\n\nconst store = createStore(\n    reducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nsocket.on('priorMessages', messages => {\n    store.dispatch(gotMessages(messages));\n});\n\nsocket.on('authsuccess', user => {\n  store.dispatch(gotUser(user));\n  store.dispatch(clearAuthError());\n});\n\nsocket.on('incomingMessage', message => {\n    store.dispatch(gotNewMessage(message));\n});\n\nsocket.on('authfailed', message => {\n  store.dispatch(gotAuthError(message));\n})\n\nsocket.on('conversation', conversation => {\n  store.dispatch(gotConversation(conversation));\n})\n\nsocket.on('conversations', conversations => {\n  store.dispatch(gotConversations(conversations));\n});\n\nsocket.on('newConversation', conversation => {\n  store.dispatch(addConversation(conversation));\n});\n\nsocket.on('users', users => {\n  store.dispatch(gotUsers(users));\n});\n\nsocket.on('newUser', user => {\n  store.dispatch(addUser(user));\n})\n\nexport const login = (credentials) => {\n    socket.emit('login', credentials);\n};\n\nexport const register = (credentials) => {\n  socket.emit('newUser', credentials);\n}\n\nexport const getConvos = (userId) => {\n  socket.emit('getConversations', userId);\n}\n\nexport const getUsers = () => {\n  socket.emit('getUsers');\n}\n\nexport const openConvo = (id) => {\n  socket.emit('openchat', id);\n}\n\nexport const createConvo = (name, userIds) => {\n  socket.emit('createchat', { name, userIds });\n}\n\nexport const logout = () => {\n    store.dispatch(clearUser());\n    store.dispatch(clearUsers());\n    store.dispatch(clearConversation());\n    store.dispatch(clearConversations());\n    store.dispatch(clearMessages());\n}\n\nexport const chooseConversation = () => {\n  store.dispatch(clearConversation());\n  store.dispatch(clearConversations());\n  store.dispatch(clearMessages());\n}\n\nexport const sendMessage = (text, sender, convoId) => {\n    socket.emit('message', { text, sender, convoId });\n};\n\nexport default store;\nexport * from './conversations';\nexport * from './user';\nexport * from './messages';\nexport * from './users';\n"],"sourceRoot":""}